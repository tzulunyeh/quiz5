{"version":3,"sources":["cgu_hello.js","cgu_mutiButton.js","App.js","reportWebVitals.js","index.js"],"names":["styleA","fontSize","color","hellocgu","style","CounterButton","props","state","counter","handleClick","bind","event","this","setState","console","log","text","Button","onClick","NO","React","Component","ReactDOM","render","document","getElementById","multiButton","num","output","i","push","App","require","className","mutiButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"yMAAMA,EAAS,CAACC,SAAS,QAAQC,MAAM,OAKxBC,EAJA,WACX,OAAO,oBAAIC,MAAQJ,EAAZ,yB,6CCWLK,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACC,QAAQ,GACtB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAHJ,E,+CAMnB,SAAYC,GACRC,KAAKC,SAAS,CAAEL,QAASI,KAAKL,MAAMC,QAAQ,IAC5CM,QAAQC,IAAIH,KAAKL,S,oBAGrB,WACI,IAAIS,EAAOJ,KAAKL,MAAMC,QACtB,OACA,eAACS,EAAA,EAAD,CAAQC,QAAWN,KAAKH,YAAxB,mBACEG,KAAKN,MAAMa,GADb,qBACoBH,EADpB,gB,GAfoBI,IAAMC,WAoBhCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAGbC,MAhCG,SAACC,GAEf,IADA,IAAIC,EAAO,GACHC,EAAE,EAAEA,EAAEF,EAAI,IAAIE,EAClBD,EAAOE,KAAK,cAAC,EAAD,CAAeX,GAAKU,KAChC,OAAOD,GCKAG,MAVf,WAEE,OADYC,EAAQ,GAElB,sBAAKC,UAAU,MAAf,UACE,8BAAM9B,MACN,8BAAM+B,EAAW,UCERC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdd,IAASC,OACP,cAAC,IAAMqB,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,SAM1BU,M","file":"static/js/main.04056148.chunk.js","sourcesContent":["const styleA = {fontSize:'100px',color:'red'};\r\nconst hellocgu=()=>{\r\n    return <h1 style ={styleA}>HELLO CGU!</h1>\r\n   \r\n} \r\nexport default hellocgu;","import Button from '@material-ui/core/Button'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst styleArgument = { fontsize: '100px', color: 'red' };\r\n\r\nconst multiButton=(num)=>{\r\n    var output=[];\r\n    for(let i=1;i<num+1;++i)\r\n        output.push(<CounterButton NO ={i}></CounterButton>)\r\n        return output;\r\n}\r\n\r\nclass CounterButton extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {counter:0};\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleClick(event) {\r\n        this.setState({ counter: this.state.counter+1 });\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        var text = this.state.counter;\r\n        return (\r\n        <Button onClick = {this.handleClick}>\r\n        第{this.props.NO}個你點{text}次</Button>);\r\n    }\r\n}\r\n\r\n  ReactDOM.render(\r\n    <CounterButton/>,\r\n    document.getElementById('root')\r\n  );\r\n\r\nexport default multiButton;","import './App.css';\r\nimport hellocgu from './cgu_hello'\r\nimport mutiButton from './cgu_mutiButton'\r\n//import CounterButton from './cgu_mutiButton'\r\n\r\nfunction App() {\r\n  var React = require('react');\r\n  return (\r\n    <div className=\"App\">\r\n      <div>{hellocgu()}</div>\r\n      <div>{mutiButton(10)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}